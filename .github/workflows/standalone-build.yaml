---
name: Standalone Build

on:
  push:
    branches: ["main", "dev"]
  pull_request:
    branches: ["dev"]
  workflow_dispatch:

defaults:
  run:
    shell: cmd

env:
  ARTIFACT: openterfaceQT-standalone.exe
  SOURCE_DIR: ${{ github.workspace }}
  QT_VERSION: 6.5.3 
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  build:
    runs-on: windows-2022
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Cache Qt Build
        id: cache-qt
        uses: actions/cache@v3
        with:
            path: C:\Qt6
            key: qt-6.5.3-mingw-windows-static
            restore-keys: |
              qt-6.5.3-mingw-windows-static

      - name: Cache MinGW and Ninja Build
        id: cache-mingw
        uses: actions/cache@v3
        with:
          path: |
            C:\ProgramData\chocolatey\lib\mingw
            C:\ProgramData\chocolatey\lib\ninja
          key: mingw-ninja-windows-static
          restore-keys: |
            mingw-ninja-windows-static

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install Build environment
        if: steps.cache-mingw.outputs.cache-hit != 'true'
        run: |
          choco install mingw -y
          choco install ninja -y
          echo "Setting up PATH for MinGW and Ninja"
          set PATH=C:\ProgramData\chocolatey\bin;%PATH%
          g++ --version || (echo "g++ installation failed. Please check the installation." && exit 1)

      - name: Build Qt Statically
        if: steps.cache-qt.outputs.cache-hit != 'true'
        run: |
          call docker/build-static-qt-from-source.bat

      - name: Create build directory
        run: |
          mkdir ${{ runner.temp }}\build
          
      - name: Prepare .pro File for Static Build
        run: |
          echo "Checking and appending static build configuration to .pro file..."
          if (-Not (Test-Path "${{ env.SOURCE_DIR }}\openterfaceQT.pro")) {
            Write-Host "Error: .pro file not found."
            exit 1
          }
          $content = Get-Content "${{ env.SOURCE_DIR }}\openterfaceQT.pro"
          if ($content -notcontains "CONFIG += static release") {
            Add-Content "${{ env.SOURCE_DIR }}\openterfaceQT.pro" "CONFIG += static release"
            Add-Content "${{ env.SOURCE_DIR }}\openterfaceQT.pro" "QMAKE_LFLAGS += -static"
            Write-Host "Static build configuration added to .pro file."
          } else {
            Write-Host "Static build configuration already present in .pro file."
          }

      - name: Build Standalone Executable
        working-directory: ${{ runner.temp }}\build
        run: |
          echo "Checking Qt configuration..."
          C:\Qt6\bin\qmake -query
          
          echo "Building with qmake..."
          set PATH=C:\Qt6\bin;C:\ProgramData\chocolatey\lib\mingw\tools\install\mingw64\bin;%PATH%

          qmake -v
          qmake -r "${{ env.SOURCE_DIR }}\openterfaceQT.pro" CONFIG+=release || (echo "qmake failed. Please check the .pro file and paths." && exit 1)
        
          echo "Building with mingw32-make..."
          mingw32-make -j2 || (echo "mingw32-make failed. Please check the build configuration." && exit 1)
        
          if not exist release\openterfaceQT.exe (
            echo "Error: Failed to build openterfaceQT.exe"
            exit 1
          )
        
          echo "Creating standalone package..."
          mkdir package
          copy release\openterfaceQT.exe package

          echo "Running windeployqt for standalone build..."
          cd package
          C:\Qt6\bin\windeployqt --qmldir ${{ env.SOURCE_DIR }} openterfaceQT.exe --compiler-runtime --no-translations --verbose 2

      - name: Save build artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.ARTIFACT }}
          path: ${{ runner.temp }}\build\package\openterfaceQT.exe
          if-no-files-found: error 