name: Alpine ARM64 Qt Build

on:
  push:
    branches: [ "main", "dev" ]
    paths:
      - 'docker/Dockerfile.alpine'
      - 'docker/build-arm64-qt-alpine.sh'
      - 'docker/build-app-alpine.sh'
      - '.github/workflows/alpine-arm64-qt-build.yml'
  pull_request:
    branches: [ "main", "dev" ]
  workflow_dispatch:
    inputs:
      qt_version:
        description: 'Qt Version'
        required: false
        default: '6.6.3'
        type: string
      rebuild_qt:
        description: 'Rebuild Qt (Ignore Cache)'
        required: false
        default: false
        type: boolean

env:
  QT_VERSION: ${{ github.event.inputs.qt_version || '6.6.3' }}
  DOCKER_IMAGE: openterface-alpine-qt-arm64-builder
  CACHE_BASE_KEY: qt-alpine-arm64-${{ github.event.inputs.qt_version || '6.6.3' }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      
      - name: Setup QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: arm64

      - name: Setup Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Try to load Docker Buildx
        uses: actions/cache@v3
        id: qt-cache
        if: ${{ !github.event.inputs.rebuild_qt }}
        with:
          path: ~/.qt-alpine-arm64-cache
          key: ${{ env.CACHE_BASE_KEY }}-${{ hashFiles('docker/build-arm64-qt-alpine.sh') }}
          restore-keys: |
            ${{ env.CACHE_BASE_KEY }}-

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ github.token }}

      - name: Fetch Docker metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/${{ github.repository_owner }}/${{ env.DOCKER_IMAGE }}
          tags: |
            type=raw,value=${{ env.QT_VERSION }}-alpine
            type=raw,value=alpine-latest
      
      - name: Pull cached Qt Alpine ARM64 image
        if: steps.qt-cache.outputs.cache-hit == 'true'
        run: |
          mkdir -p ~/.qt-alpine-arm64-cache
          echo "Loading cached Docker image..."
          docker load -i ~/.qt-alpine-arm64-cache/qt-alpine-arm64-image.tar || echo "No cached image found"

      - name: Rebuild Qt Alpine ARM64 image
        uses: docker/build-push-action@v4
        with:
          context: ./docker
          file: ./docker/Dockerfile.alpine
          push: true
          platforms: linux/amd64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            QT_VERSION=${{ env.QT_VERSION }}
      
      - name: Save Qt Alpine ARM64 image to cache
        if: ${{ !steps.qt-cache.outputs.cache-hit }}
        run: |
          mkdir -p ~/.qt-alpine-arm64-cache
          echo "Saving Docker image to cache..."
          docker save -o ~/.qt-alpine-arm64-cache/qt-alpine-arm64-image.tar ghcr.io/${{ github.repository_owner }}/${{ env.DOCKER_IMAGE }}:${{ env.QT_VERSION }}-alpine

      - name: Make sure scripts are executable
        run: |
          chmod +x docker/build-arm64-qt-alpine.sh
          chmod +x docker/build-app-alpine.sh

      - name: Build Qt for ARM64
        run: |
          cd docker
          docker-compose -f docker-compose.alpine.yml run app-alpine-builder

      - name: Upload Qt ARM64 build artifact
        uses: actions/upload-artifact@v4
        with:
          name: openterfaceQT-alpine-arm64
          path: output/openterfaceQT
          if-no-files-found: error
