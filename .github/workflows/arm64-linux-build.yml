name: ARM64 GNU/Linux Build

on:
  push:
    branches: [ "main", "dev" ]
    paths:
      - 'docker/Dockerfile.arm64'
      - '.github/workflows/arm64-linux-build.yml'
      - 'CMakeLists.txt'
      - 'src/**'
      - 'ui/**'
      - 'host/**'
      - 'video/**'
      - 'serial/**'
      - 'scripts/**'
  pull_request:
    branches: [ "main", "dev" ]
  workflow_dispatch:
    inputs:
      qt_version:
        description: 'Qt Version'
        required: false
        default: '6.5.3'
        type: string

env:
  QT_VERSION: ${{ github.event.inputs.qt_version || '6.5.3' }}
  DOCKER_IMAGE: openterface-arm64-builder
  CACHE_BASE_KEY: arm64-gnu-linux-${{ github.event.inputs.qt_version || '6.5.3' }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: arm64

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ env.CACHE_BASE_KEY }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-${{ env.CACHE_BASE_KEY }}-

      - name: Login to GitHub Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository_owner }}/${{ env.DOCKER_IMAGE }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=sha,prefix={{branch}}-
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./docker/Dockerfile.arm64
          platforms: linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max
          build-args: |
            QT_VERSION=${{ env.QT_VERSION }}

      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

      - name: Extract binary from Docker image (if built)
        if: github.event_name != 'pull_request'
        run: |
          # Create a temporary container and copy the binary
          docker create --name temp-container ghcr.io/${{ github.repository_owner }}/${{ env.DOCKER_IMAGE }}:${{ github.sha }}
          docker cp temp-container:/app/build/openterfaceQT ./openterfaceQT-arm64-linux
          docker rm temp-container
          
          # Make binary executable and create artifact
          chmod +x ./openterfaceQT-arm64-linux
          file ./openterfaceQT-arm64-linux

      - name: Upload binary artifact
        if: github.event_name != 'pull_request'
        uses: actions/upload-artifact@v4
        with:
          name: openterfaceQT-arm64-linux
          path: ./openterfaceQT-arm64-linux
          retention-days: 30
