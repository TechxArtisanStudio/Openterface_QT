name: Create GitHub Release

on:
  workflow_dispatch:
    inputs:
      release_tag:
        description: 'Publish a new release with this tag'
        required: true
        type: string
      draft:
        description: 'Create a draft release'
        required: false
        type: boolean
        default: true
      prerelease:
        description: 'Tag this release as a pre-release'
        required: false
        type: boolean
        default: false

jobs:
  wait-for-builds:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Wait for required workflows
        run: |
          # Fixed list of workflows to wait for
          WORKFLOWS=("windows-build.yaml" "windows-portable-build.yaml" "linux-build.yaml" "linux-portable-build.yaml")
          
          echo "Workflows to wait for:"
          for workflow in "${WORKFLOWS[@]}"; do
            echo "- $workflow"
            
            echo "Waiting for workflow: $workflow"
            
            # Wait for the workflow to complete
            echo "Looking for recent runs of $workflow on branch ${{ github.ref_name }}..."
            run_id=$(gh run list --workflow=$workflow --branch=${{ github.ref_name }} --limit=1 --json databaseId --jq '.[0].databaseId')
            
            if [ -n "$run_id" ]; then
              echo "Found run ID: $run_id. Waiting for completion..."
              gh run watch $run_id
            else
              echo "Warning: No recent runs found for $workflow on branch ${{ github.ref_name }}"
            fi
          done
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
  create-release:
    needs: wait-for-builds
    runs-on: ubuntu-latest
    permissions:
      contents: write
      actions: read
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          
      - name: Get previous tag
        id: get_previous_tag
        shell: bash
        run: |
          PREVIOUS_TAG=$(git describe --tags --abbrev=0 || echo "")
          if [ -z "$PREVIOUS_TAG" ]; then
            echo "No previous tag found, using first commit"
            PREVIOUS_TAG=$(git rev-list --max-parents=0 HEAD)
          fi
          echo "PREVIOUS_TAG=$PREVIOUS_TAG" >> $GITHUB_OUTPUT
      
      - name: Generate changelog
        id: changelog
        shell: bash
        run: |
          if [ -z "${{ steps.get_previous_tag.outputs.PREVIOUS_TAG }}" ]; then
            CHANGELOG="Initial release"
          else
            CHANGELOG=$(git log ${{ steps.get_previous_tag.outputs.PREVIOUS_TAG }}..HEAD --pretty=format:"- %s")
            if [ $? -ne 0 ]; then
              echo "Error generating changelog, defaulting to empty changelog"
              CHANGELOG="See commit history for changes"
            fi
          fi
          echo "CHANGELOG<<EOF" >> $GITHUB_OUTPUT
          echo "$CHANGELOG" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
            
      - name: Download Windows artifacts
        uses: dawidd6/action-download-artifact@v2
        with:
          workflow: windows-build.yaml
          workflow_conclusion: success
          name: openterfaceQT.windows.amd64.installer
          path: artifacts/windows
          
      - name: Download Linux AMD64 DEB artifact
        uses: dawidd6/action-download-artifact@v2
        with:
          workflow: linux-build.yaml
          workflow_conclusion: success
          name: openterfaceQT.linux.amd64.deb
          path: artifacts/linux/amd64/deb
          
      - name: Download Linux AMD64 RPM artifact
        uses: dawidd6/action-download-artifact@v2
        with:
          workflow: linux-build.yaml
          workflow_conclusion: success
          name: openterfaceQT.linux.amd64.rpm
          path: artifacts/linux/amd64/rpm
          
      - name: Download Linux ARM64 DEB artifact
        uses: dawidd6/action-download-artifact@v2
        with:
          workflow: linux-build.yaml
          workflow_conclusion: success
          name: openterfaceQT.linux.arm64.deb
          path: artifacts/linux/arm64/deb
          
      - name: Download Linux ARM64 RPM artifact
        uses: dawidd6/action-download-artifact@v2
        with:
          workflow: linux-build.yaml
          workflow_conclusion: success
          name: openterfaceQT.linux.arm64.rpm
          path: artifacts/linux/arm64/rpm
          
      - name: List all downloaded artifacts
        run: |
          echo "Downloaded artifacts:"
          find artifacts -type f | sort
          
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.event.inputs.release_tag }}
          name: Release ${{ github.event.inputs.release_tag }}
          body: |
            ## Change Log
            
            ${{ steps.changelog.outputs.CHANGELOG }}
            
          draft: ${{ github.event.inputs.draft }}
          prerelease: ${{ github.event.inputs.prerelease }}
          files: |
            artifacts/**/*
            LICENSE
