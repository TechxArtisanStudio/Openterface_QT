FROM arm64v8/debian:bookworm

# Set non-interactive frontend for apt
ENV DEBIAN_FRONTEND=noninteractive
ENV QT_VERSION=6.5.3

# Install build dependencies
RUN apt-get update && apt-get install -y \
    build-essential \
    cmake \
    git \
    wget \
    pkg-config \
    libfontconfig1-dev \
    libfreetype6-dev \
    libx11-dev \
    libxext-dev \
    libxfixes-dev \
    libxi-dev \
    libxrender-dev \
    libxcb1-dev \
    libx11-xcb-dev \
    libxcb-glx0-dev \
    libxkbcommon-dev \
    libxkbcommon-x11-dev \
    libglib2.0-dev \
    libgl1-mesa-dev \
    libglu1-mesa-dev \
    freeglut3-dev \
    libegl1-mesa-dev \
    libdbus-1-dev \
    libssl-dev \
    libicu-dev \
    libusb-1.0-0-dev \
    libexpat1-dev \
    libbz2-dev \
    libxrandr-dev \
    libasound2-dev \
    libpulse-dev \
    yasm \
    nasm \
    && rm -rf /var/lib/apt/lists/*

# Build FFmpeg with static libraries
RUN wget https://ffmpeg.org/releases/ffmpeg-6.0.tar.xz \
    && tar xf ffmpeg-6.0.tar.xz \
    && cd ffmpeg-6.0 \
    && ./configure \
        --prefix=/usr/local \
        --enable-static \
        --disable-shared \
        --disable-doc \
        --disable-ffplay \
        --disable-ffprobe \
        --disable-network \
        --disable-autodetect \
        --enable-pic \
    && make -j$(nproc) \
    && make install \
    && cd .. \
    && rm -rf ffmpeg-6.0 ffmpeg-6.0.tar.xz

# Download and compile Qt
RUN wget https://download.qt.io/official_releases/qt/6.5/${QT_VERSION}/single/qt-everywhere-src-${QT_VERSION}.tar.xz \
    && tar xf qt-everywhere-src-${QT_VERSION}.tar.xz \
    && cd qt-everywhere-src-${QT_VERSION} \
    && ./configure -prefix /opt/Qt/${QT_VERSION} \
        -opensource \
        -confirm-license \
        -release \
        -nomake examples \
        -nomake tests \
        -feature-pkg-config \
        -qt-pcre \
        -qt-zlib \
        -qt-libpng \
        -qt-libjpeg \
        -openssl-linked \
    && make -j$(nproc) \
    && make install \
    && cd .. \
    && rm -rf qt-everywhere-src-${QT_VERSION} qt-everywhere-src-${QT_VERSION}.tar.xz

# Set Qt environment variables
ENV PATH="/opt/Qt/${QT_VERSION}/bin:${PATH}"
ENV QT_PLUGIN_PATH="/opt/Qt/${QT_VERSION}/plugins"
ENV QML2_IMPORT_PATH="/opt/Qt/${QT_VERSION}/qml"
ENV LD_LIBRARY_PATH="/opt/Qt/${QT_VERSION}/lib:${LD_LIBRARY_PATH}"

WORKDIR /app

# Copy source code
COPY . .

# Build the application
RUN cmake -B build -S . \
        -DCMAKE_PREFIX_PATH="/opt/Qt/${QT_VERSION}" \
        -DCMAKE_BUILD_TYPE=Release \
        -DUSE_FFMPEG_STATIC=ON \
    && cmake --build build -j$(nproc) \
    && strip build/openterfaceQT

# Verify the binary was built successfully
RUN test -f /app/build/openterfaceQT || (echo "Binary not found!" && exit 1)
RUN file /app/build/openterfaceQT

CMD ["/app/build/openterfaceQT"]
